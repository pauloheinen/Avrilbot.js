"use strict";
const SpotifyUrl = require('./getInfoSpotify.js');
const {getTrackID, getPlaylistID, getAlbumID, getAuthorID} = require('../getID.js');

class Utils {
    getImage = (url) => {
        return new Promise((res) => {
            SpotifyUrl.getPreview(url).then(async (info) => {
                if (info.error) return res(null)
                if (!info) return res({url: null});
                return res({
                    url: info?.image?.url,
                    width: info?.image?.width,
                    height: info?.image?.height
                });
            });
        });
    };
    getData = (resp, playlist) => {
        try {
            return new Promise(async (res) => {
                if (!resp) return {isValid: false};
                if (!playlist) resp = resp[0];
                if (resp.error) return res(null)

                let author = resp?.artists[0] && resp?.artists[0].id ? resp?.artists[0] : resp?.artists;
                return res({
                    id: resp.id ?? getTrackID(resp?.external_urls?.spotify),
                    title: `${author?.name} - ${resp?.name}`,
                    url: `https://open.spotify.com/track/${resp?.id}`,
                    author: {
                        id: author?.id,
                        url: author?.external_urls?.spotify,
                        title: author?.name,
                        thumbnails: await this.getImage(`https://open.spotify.com/artist/${author.id}`),
                        isVerified: undefined
                    },
                    duration: {
                        seconds: (resp?.duration_ms / 1000).toFixed(0)
                    },
                    thumbnails: resp?.album?.images[0] ?? resp?.album?.images[1] ?? resp?.album?.images[2],
                    isValid: resp?.is_playable
                })
            })
        } catch (e) {
            return {
                error: true,
                message: e
            }
        }
    };
    ParseUrlToType = (url) => {
        let UrlD = `https://embed.spotify.com/?uri=spotify`;
        let id = getTrackID(url) || getPlaylistID(url) || getAlbumID(url) || getAuthorID(url);

        if (url.match(/playlist/)) UrlD += ':playlist:';
        else if (url.match(/album/)) UrlD += ':album:';
        else if (url.match(/artist/)) UrlD += ':artist:';
        else if (url.match(/track/)) UrlD += ':track:';
        return UrlD + id;
    };
}
module.exports = new Utils();