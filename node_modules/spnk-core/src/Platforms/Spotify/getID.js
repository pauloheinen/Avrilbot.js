"use strict";
let SpotifyStr = /^(https?:\/\/)?(open\.)?(m\.)?(spotify\.com|spotify\.?ru)\/.+$/gi;

module.exports = {
    getTrackID: (url) => {
        if (!url.match(SpotifyStr)) return undefined;
        if (typeof url !== 'string') return undefined;

        if (url.match(/spotify/) && url.match(/track/)) {
            if (!url.match(/si=/)) return url.split('track/')[1];
            else return url.split('track/')[1].split('?')[0];
        } else return undefined;
    },
    getPlaylistID: (url) => {
        if (!url.match(SpotifyStr)) return undefined;
        if (typeof url !== 'string') return undefined;

        if (url.match(/spotify/) && url.match(/playlist/)) {
            if (!url.match(/si=/)) return url.split('playlist/')[1];
            else return url.split('playlist/')[1].split('?')[0];
        } else return undefined;
    },
    getAlbumID: (url) => {
        if (!url.match(SpotifyStr)) return undefined;
        if (typeof url !== 'string') return undefined;

        if (url.match(/spotify/) && url.match(/album/)) {
            if (!url.match(/si=/)) return url.split('album/')[1];
            else return url.split('album/')[1].split('?')[0];
        } else return undefined;
    },
    getAuthorID: (url) => {
        if (!url.match(SpotifyStr)) return undefined;
        if (typeof url !== 'string') return undefined;

        if (url.match(/spotify/) && url.match(/artist/)) {
            if (!url.match(/si=/)) return url.split('artist/')[1];
            else return url.split('artist/')[1].split('?')[0];
        } else return undefined;
    }
};